
services:
  db:
    image: postgres:17
    container_name: db
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGPORT: ${DATABASE_PORT}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - app-network

  django:
    build: ./djang/
    container_name: django
    ports:
      - "${PORT_DJANGO}:${PORT_DJANGO}"
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - app-network

  nginx:
    build: ./nginx/
    container_name: nginx
    ports:
      - '443:443'
    restart: always
    depends_on:
         - django
    networks:
      - app-network
    volumes:
      - ./certs:/etc/nginx/certs:ro
  
  central:
    build: ./central/
    container_name: central
    restart: always
    ports:
      - "${PORT_CENTRAL}:${PORT_CENTRAL}"
    networks:
      - app-network
    volumes:
      - ./certs:/etc/certs:ro
    env_file:
      - .env

  chat:
    build: ./chat/
    container_name: chat
    restart: always
    depends_on:
      - central
    ports:
      - "${PORT_CHAT}:${PORT_CHAT}"
    networks:
      - app-network
    volumes:
      - ./certs:/etc/certs:ro
    env_file:
      - .env

  1v1_classic:
    container_name: 1v1_classic
    build: ./back_1v1/
    restart: always
    depends_on:
      - central
    ports:
      - "${PORT_1V1_CLASSIC}:${PORT_1V1_CLASSIC}"
    networks:
      - app-network
    volumes:
      - ./certs:/etc/certs:ro
    env_file:
      - .env
    stop_signal: SIGINT
    stop_grace_period: 0.2s
  
  2v2_classic:
    container_name: 2v2_classic
    build: ./back_2v2/
    restart: always
    depends_on:
      - central
    ports:
      - "${PORT_2V2_CLASSIC}:${PORT_2V2_CLASSIC}"
    networks:
      - app-network
    volumes:
      - ./certs:/etc/certs:ro
    env_file:
      - .env
    stop_signal: SIGINT
    stop_grace_period: 0.2s

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge