
services:
  db:
    image: postgres:17
    container_name: db
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - app-network

  django:
    build: ./djang/
    container_name: django
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      HOST_ADDRESS: ${HOST_ADDRESS}
    env_file:
      - .env
    networks:
      - app-network

  nginx:
    build: ./nginx/
    container_name: nginx
    ports:
      - '443:443'
    restart: always
    depends_on:
         - django
    networks:
      - app-network
    volumes:
      - ./certs:/etc/nginx/certs:ro
  
  central:
    build: ./central/
    container_name: central
    restart: always
    ports:
      - "7777:7777"
    networks:
      - app-network
    volumes:
      - ./certs:/etc/certs:ro

  chat:
    build: ./chat/
    container_name: chat
    restart: always
    depends_on:
      - central
    ports:
      - "7878:7878"
    networks:
      - app-network
    volumes:
      - ./certs:/etc/certs:ro

  1v1_classic:
    container_name: 1v1_classic
    build: ./back_1v1/
    restart: always
    depends_on:
      - central
    ports:
      - "8001:8001"
    networks:
      - app-network
    volumes:
      - ./certs:/etc/certs:ro

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge